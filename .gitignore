party-gopher.gif

# https://github.com/nruppatel133/Nrup-Friday-GO

package main

import (
	"image/color"
	"image/gif"
	"log"
	"os"
	"strconv"
)

var (
	ParrotColors     []color.Color
	DarkParrotColors []color.Color
	LightGopherBlue  color.Color
	DarkGopherBlue   color.Color
)
func init() {
	var err error

	for _, s := range []string{
		"FF6B6B",
		"FF6BB5",
		"FF81FF",
		"FF81FF",
		"D081FF",
		"81ACFF",
		"81FFFF",
		"81FF81",
		"FFD081",
		"FF8181",
	} {
	c, err := hexToColor(s)
		if err != nil {
			log.Fatal(err)
		}
		ParrotColors = append(ParrotColors, c)
		DarkParrotColors = append(DarkParrotColors, darken(c))
	}
	
	
	LightGopherBlue, err = hexToColor("8BD0FF")
	if err != nil {
		log.Fatal(err)
	}
	DarkGopherBlue, err = hexToColor("82C2EE")
	if err != nil {
		log.Fatal(err)
	}
}


func main() {
	// Indexes for light and dark blue in palettes.
	var (
		lbi int
		dbi int
	)

	// Open the dancing gopher gif
	f, err := os.Open("dancing-gopher.gif")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	// Decode the gif so we can edit it
	gopher, err := gif.DecodeAll(f)
	if err != nil {
		log.Fatal(err)
	}


	// Instead of changing pixels with Set(x, y int, c color.Color)
	// let's just tweak the palette to replace those colors.
	for i, frame := range gopher.Image {
		lbi = frame.Palette.Index(LightGopherBlue)
		dbi = frame.Palette.Index(DarkGopherBlue)

		frame.Palette[lbi] = ParrotColors[i%len(ParrotColors)]
		frame.Palette[dbi] = DarkParrotColors[i%len(DarkParrotColors)]
	}
